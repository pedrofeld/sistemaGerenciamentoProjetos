// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Projeto {
  id             String    @id @default(uuid()) @db.Uuid
  titulo         String    @unique
  descricao      String?
  dataInicio     DateTime
  prazoConclusao DateTime?
  status         String    @default("ativo")

  tarefas  Tarefa[]
  usuarios UsuarioProjeto[]

  dataCriacao     DateTime @default(now()) @map("data_criacao")
  dataAtualizacao DateTime @default(now()) @updatedAt @map("data_atualizacao")

  @@map("projetos")
}

model Tarefa {
  id        String  @id @default(uuid()) @db.Uuid
  descricao String
  horas     Int
  urgente   Boolean @default(false)
  status    String  @default("pendente")

  projetoId String  @map("projeto_id") @db.Uuid
  projeto   Projeto @relation(fields: [projetoId], references: [id])

  dataCriacao     DateTime @default(now()) @map("data_criacao")
  dataAtualizacao DateTime @default(now()) @updatedAt @map("data_atualizacao")

  @@map("tarefas")
}

model Usuario {
  id    String @id @default(uuid()) @db.Uuid
  nome  String
  email String @unique
  senha String

  projetos UsuarioProjeto[]

  dataCriacao     DateTime @default(now()) @map("data_criacao")
  dataAtualizacao DateTime @default(now()) @updatedAt @map("data_atualizacao")

  @@map("usuarios")
}

model UsuarioProjeto {
  usuarioId String @map("usuario_id") @db.Uuid
  projetoId String @map("projeto_id") @db.Uuid

  usuario Usuario @relation(fields: [usuarioId], references: [id])
  projeto Projeto @relation(fields: [projetoId], references: [id])

  @@id([usuarioId, projetoId])
  @@map("usuarios_projetos")
}
